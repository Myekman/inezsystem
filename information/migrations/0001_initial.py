# Generated by Django 5.0.3 on 2024-04-01 10:56

import django.db.models.deletion
import information.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CarType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_type_name', models.CharField(max_length=100, unique=True, verbose_name='Fordonstyp')),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100, verbose_name='Företagsnamn')),
                ('company_invoice_address', models.CharField(max_length=300, verbose_name='Fakturaadress')),
                ('company_org_nr', models.CharField(max_length=100, verbose_name='Organisations nummer')),
                ('company_phone_number', models.CharField(max_length=100, verbose_name='Telefonnummer')),
                ('company_postal_number', models.CharField(max_length=20, verbose_name='Postkod')),
                ('company_city', models.CharField(max_length=100, verbose_name='Stad')),
            ],
        ),
        migrations.CreateModel(
            name='ScaffoldType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_price', models.BooleanField(default=False)),
                ('work_comment', models.CharField(default=None, max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='SubcontractorCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_company', models.CharField(max_length=100, unique=True, verbose_name='UE Företagsnamn')),
                ('sub_email', models.EmailField(max_length=200, unique=True, verbose_name='UE Företagsmail')),
                ('sub_org_nr', models.CharField(max_length=100, unique=True, verbose_name='UE Org Nummer')),
                ('sub_address', models.CharField(max_length=100, verbose_name='UE Address')),
                ('sub_city', models.CharField(max_length=100, verbose_name='UE Stad')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='WorkPerformed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_performed', models.CharField(choices=[('montering', 'Montering'), ('deldemontering', 'Deldemontering'), ('ändring', 'Ändring'), ('slutdemontering', 'Slutdemontering'), ('komplettering', 'Komplettering'), ('ombesiktning', 'Ombesiktning')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Subcontractor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_firstname', models.CharField(max_length=50, verbose_name='UE Förnamn')),
                ('sub_lastname', models.CharField(max_length=50, verbose_name='UE Efternamn')),
                ('sub_email', models.EmailField(blank=True, max_length=200, verbose_name='UE Mail')),
                ('sub_id06', models.CharField(max_length=100, verbose_name='UE ID06')),
                ('sub_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='information.subcontractorcompany', verbose_name='UE Företag')),
                ('unit', models.ManyToManyField(blank=True, to='information.unit', verbose_name='Enheter')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_firstname', models.CharField(max_length=50, verbose_name='Förnamn')),
                ('staff_lastname', models.CharField(max_length=50, verbose_name='Efternamn')),
                ('staff_email', models.EmailField(max_length=100, null=True, verbose_name='Email')),
                ('staff_phonenumber', models.CharField(max_length=100, verbose_name='Telefon')),
                ('staff_id06', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID06')),
                ('unit', models.ManyToManyField(blank=True, to='information.unit', verbose_name='Enhet')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('worker_firstname', models.CharField(max_length=100, verbose_name='Beställare Förnamn')),
                ('worker_lastname', models.CharField(max_length=100, verbose_name='Beställare Efternamn')),
                ('worker_email', models.EmailField(max_length=254, null=True, verbose_name='Beställare mail')),
                ('worker_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='information.company', verbose_name='Beställare Företag')),
                ('unit', models.ManyToManyField(default=None, to='information.unit', verbose_name='Enheter')),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_regnr', models.CharField(max_length=50, unique=True, verbose_name='Reg Nr')),
                ('car_name', models.CharField(max_length=100, verbose_name='Bil namn')),
                ('car_active', models.BooleanField(default=True, verbose_name='Bil aktiv')),
                ('day_created', models.DateTimeField(auto_now_add=True)),
                ('car_type_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='information.cartype', verbose_name='Bil typ')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='information.unit', verbose_name='Enhet')),
            ],
        ),
        migrations.CreateModel(
            name='Scaffold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scaffold_number', models.IntegerField(verbose_name='Ställnings nummer')),
                ('scaffold_location', models.CharField(max_length=200, verbose_name='Plats')),
                ('scaffold_for', models.CharField(max_length=200, verbose_name='Ställning för')),
                ('scaffold_marking', models.CharField(blank=True, max_length=200, verbose_name='Märkning')),
                ('scaffold_po', models.CharField(blank=True, max_length=200, verbose_name='Inköpsordernummer')),
                ('scaffold_cubic', models.IntegerField(blank=True, default=0, validators=[information.models.validate_positive_or_zero], verbose_name='Kubik')),
                ('scaffold_stair', models.IntegerField(blank=True, default=0, validators=[information.models.validate_positive_or_zero], verbose_name='Trappmeter')),
                ('scaffold_material', models.BooleanField(default=False, verbose_name='Ställnings material')),
                ('day_created', models.DateTimeField(auto_now_add=True)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='information.unit', verbose_name='Enhet')),
            ],
            options={
                'unique_together': {('unit', 'scaffold_number')},
            },
        ),
    ]
